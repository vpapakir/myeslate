package gr.cti.eslate.base.container;

import java.util.ListResourceBundle;


public class MicroworldPropertiesDialogBundle extends ListResourceBundle {
    public Object [][] getContents() {
        return contents;
    }

    static final Object[][] contents={
        {"Title",                           "Microworld properties"},
        {"OK",                              "OK"},
        {"Cancel",                          "Cancel"},
        {"Apply",                           "Apply"},
        {"Profiles",                        "Profiles"},
        {"MicroworldInfo",                  "Information"},
        {"MicroworldBackground",            "Interface"},
        {"ControlBar",                      "Component control bar"},
        {"ComponentPanel",                  "Components"},
        {"MicroworldPanel",                 "Microworld"},
        {"Metadata",                        "Information"},
        {"Settings",                        "Settings"},
        {"Microworld Settings",             "Microworld settings"},
        {"UI Settings",                     "UI settings"},
        {"View Settings",                   "View settings"},
        {"Storage Settings",                "Storage settings"},
        {"Popup-Menus settings",            "Pop-up menu settings"},
        {"Component mgmt settings",         "Component manager settings"},
        {"View Based Settings",             "View-bases settings"},
        {"View",                            "View"},
        {"Microworld View Based Settings",  "Microworld view-based settings"},
        {"Component View Based Settings",   "Component view-based settings"},
        {"Microworld UI View Based Settings",         "UI settings"},
        {"Microworld Print View Based Settings",      "Print settings"},
        {"Microworld UI Menus View Based Settings",   "Menu settings"},
        {"Microworld UI Desktop View Based Settings", "Desktop settings"},
        {"Component Bar View Based Settings",         "Component bar settings"},
        {"Component Bar Button View Based Settings",  "Button settings"},
        {"eslateComponentBarMenuEnabled",   "Microworld's component bar pop-up menu enabled"},
        {"eslateComponentBarMenuEnabledTip","Determines whether the pop-up menu will be displayed when an icon <br>in the microworld component bar is right-cliked"},
        {"componentBarMenuEnabled",         "Component bar pop-up menu enabled"},
        {"componentBarMenuEnabledTip",      "Determines whether the component bar pop-up menu will be displayed, <br>when the bar is right-clicked"},
        {"mwdPopupEnabled",                 "Microworld pop-up menu enabled"},
        {"mwdPopupEnabledTip",              "Determines whether the microworld pop-up menu will be displayed, <br>when the desktop is right-clicked"},
        {"mwdLayerMgmtAllowed",             "Microworld layer editing allowed"},
        {"mwdLayerMgmtAllowedTip",          "Determines if the user has access to the layers of the microworld"},
        {"viewMgmtAllowed",                 "Microworld view editing allowed"},
        {"viewMgmtAllowedTip",              "Determines if the user has access to the management of the views <br>of the microworld"},
        {"gridMgmtAllowed",                 "Microworld grid editing allowed"},
        {"gridMgmtAllowedTip",              "Determines if the user has access to the management of the grid <br>of the microworld"},
        {"eslateOptionMgmtAllowed",         "E-Slate settings dialog enabled"},
        {"eslateOptionMgmtAllowedTip",      "Enables the access to the E-Slate settings dialog"},
        {"componentPropertyMgmtAllowed",    "Component property editing allowed"},
        {"componentPropertyMgmtAllowedTip", "Determines if the user can edit the properties of the components of the <br>microworld through the Component Manager"},
        {"componentEventMgmtAllowed",       "Component event editing allowed"},
        {"componentEventMgmtAllowedTip",    "Determines if the user can edit the events of the components of the <br>microworld through the Component Manager"},
        {"componentSoundMgmtAllowed",       "Component sound editing allowed"},
        {"componentSoundMgmtAllowedTip",    "Determines if the user can edit the sounds of the components of the <br>microworld through the Component Manager"},
        {"mwdLAFChangeAllowed",             "Microworld Look&Feel change allowed"},
        {"mwdLAFChangeAllowedTip",          "Determines if the Look&Feel of the microworld can be changed"},
        {"eslateComponentBarEnabled",       "Microworld's component bar enabled"},
        {"eslateComponentBarEnabledTip",    "Detrmines if the microworld's component bar can be displayed and used"},
        {"consolesAllowed",                 "Consoles enabled"},
        {"consolesAllowedTip",              "Determines if the user has access to the E-Slate consoles"},
        {"componentNameChangeAllowed",      "Component renaming allowed"},
        {"componentNameChangeAllowedTip",   "Determines if the names of the components in the microworld can be changed"},
        {"microworldNameUserDefined",       "Microworld name is user defined"},
        {"microworldNameUserDefinedTip",    "Determines if the name of the microworld will be the name of its file, <br>or the name is supplied by the user"},
        {"componentInstantiationAllowed",   "Component creation allowed"},
        {"componentInstantiationAllowedTip","Determines if new components can be added to the microworld"},
        {"componentRemovalAllowed",         "Component removal allowed"},
        {"componentRemovalAllowedTip",      "Determines if components can be removed from the microworld"},
        {"mwdNameChangeAllowed",            "Microworld renaming allowed"},
        {"mwdNameChangeAllowedTip",         "Determines if the name of the microworld can be changed"},
        {"performanceMgrActive",            "Performance monitor active"},
        {"performanceMgrActiveTip",         "Determines if the microworld's performance is monitored"},
        {"mwdStorageAllowed",               "Microworld storage allowed"},
        {"mwdStorageAllowedTip",            "Determines if the microworld can be saved"},
        {"mwdAutoBackupEnabled",            "Microworld auto back-up mechanism enabled"},
        {"mwdAutoBackupEnabledTip",         "Determines if E-Slate automatically backs-up microworld files,<br>when they are saved"},
        {"storeSkinOnAPerViewBasis",        "Multiple component skins (skin per view) allowed"},
        {"storeSkinOnAPerViewBasisTip",     "Determines if microworld components can have multiple skins (on a view basis)"},
        {"viewCreationAllowed",             "View creation allowed"},
        {"viewCreationAllowedTip",          "Determines if new views can be created in the microworld"},
        {"viewRemovalAllowed",              "View removal allowed"},
        {"viewRemovalAllowedTip",           "Determines if existing views can be removed from the microworld"},
        {"viewRenameAllowed",               "View renaming allowed"},
        {"viewRenameAllowedTip",            "Determines if the names of the views can be changed"},
        {"viewActivationAllowed",           "View activation allowed"},
        {"viewActivationAllowedTip",        "Determines if views can be activated in the microworld"},
        {"plugConnectionChangeAllowed",     "Plug re-configuration allowed"},
        {"plugConnectionChangeAllowedTip",  "Determines if the user can (dis)connect component plugs <br>in the microworld"},
        {"mwdBgrdChangeAllowed",            "Background change allowed"},
        {"mwdBgrdChangeAllowedTip",         "determines if the background settings of the microworld are editable"},
        {"menuSystemHeavyWeight",           "Use of 'heavyweight' menus"},
        {"menuSystemHeavyWeightTip",        "Transofrms the E-Slate menus to 'heavyweight'(native OS menus)"},
        {"menuBarVisible",                  "ESlate menu bar visible"},
        {"menuBarVisibleTip",               "Determines the visibility of the E-Slate menu bar"},
        {"mwdAutoExpandable",               "Auto-expandable microworld"},
        {"mwdAutoExpandableTip",            "Determines if the microworld will automatically expand, <br>when the active component is dragged beyond the desktop boundaries"},
        {"mwdAutoScrollable",               "Auto-scrollable microworld"},
        {"mwdAutoScrollableTip",            "Determines if the microworld will scroll, every time the active <br>component is not fully contained inside the visible part of the desktop"},
        {"horizontalScrollbarPolicy",       "Horizontal scroll bar display policy"},
        {"horizontalScrollbarPolicyTip",    "Determines the display policy of the horizontal scroll bar"},
        {"verticalScrollbarPolicy",         "Vertical scroll bar display policy"},
        {"verticalScrollbarPolicyTip",      "Determines the display policy of the vertical scroll bar"},
        {"desktopDraggable",                "Desktop draggable"},
        {"desktopDraggableTip",             "Determines if the user can scroll the desktop with the <br>grab and drag gestrure"},
        {"mwdResizable",                    "Desktop resizable"},
        {"mwdResizableTip",                 "Determines if the microworld is resizable"},
        {"componentsMoveBeyondMwdBounds",   "Components may exceed microworld boundaries"},
        {"componentsMoveBeyondMwdBoundsTip","Determines if the components can be dragged beyond the <br>microworld boundaries"},
        {"desktopWidth",                    "Desktop width"},
        {"desktopWidthTip",                 "Desktop width"},
        {"desktopHeight",                   "Desktop height"},
        {"desktopHeightTip",                "Desktop height"},
        {"mwdPageSetupAllowed",             "Page set-up allowed"},
        {"mwdPageSetupAllowedTip",          "Determines if the user has access to the <br>page set-up dialog"},
        {"mwdPrintAllowed",                 "Microworld print allowed"},
        {"mwdPrintAllowedTip",              "Determines if the microworld can be printed"},
        {"componentPrintAllowed",           "Component print allowed"},
        {"componentPrintAllowedTip",        "Determines if component printing is permitted<br> in the microworld"},
        {"componentMinimizeAllowed",        "Component hiding allowed"},
        {"componentMinimizeAllowedTip",     "Determines if the components of the microworld<br> can be hidden"},
        {"componentMaximizeAllowed",        "Component maximizing allowed"},
        {"componentMaximizeAllowedTip",     "Determines if the components of the microworld can be maximized"},
        {"ensureActiveComponentVisible",    "Active component always visible"},
        {"ensureActiveComponentVisibleTip", "Determines if the desktop should scroll every time a component, which is not fully <br>contained inside the visible portion of the desktop, is activated"},
        {"componentActivationMethodChangeAllowed",    "Change of component activation method allowed"},
        {"componentActivationMethodChangeAllowedTip", "determines if the activation method of the microworld components can change"},
        {"activeComponentHighlighted",      "Visual indication of active component"},
        {"activeComponentHighlightedTip",   "Determines if the microworld should provide visual indication of the active component"},
        {"outlineDragEnabled",              "Outline drag enabled"},
        {"outlineDragEnabledTip",           "Determines if the component is drawn while it is moved around"},
        {"controlBarTitleActive",           "Component bar title editable"},
        {"controlBarTitleActiveTip",        "Determines if the name of the component can be edited <br>inside its title bar (Ctrl click)"},
        {"controlBarsVisible",              "Component bar visible"},
        {"controlBarsVisibleTip",           "Determines if the title bars of the components in the <br>microworld are visible"},
        {"minimizeButtonVisible",           "'Hide' button visible"},
        {"minimizeButtonVisibleTip",        "Determines the visibility of the 'Hide' button of the <br>component's title bar"},
        {"maximizeButtonVisible",           "'Maximize' button visible"},
        {"maximizeButtonVisibleTip",        "Determines the visibility of the 'Maximize' button of the <br>component's title bar"},
        {"closeButtonVisible",              "'Close' button visible"},
        {"closeButtonVisibleTip",           "Determines the visibility of the 'Close' button of the <br>component's title bar"},
        {"helpButtonVisible",               "'Help' button visible"},
        {"helpButtonVisibleTip",            "Determines the visibility of the 'Help' button of the <br>component's title bar"},
        {"plugButtonVisible",               "'Plugs' button visible"},
        {"plugButtonVisibleTip",            "Determines the visibility of the 'Plugs' button of the <br>component's title bar"},
        {"infoButtonVisible",               "'Information' button visible"},
        {"infoButtonVisibleTip",            "Determines the visibility of the 'Information' button of the <br>component's title bar"},
        {"resizeAllowed",                   "Component resize allowed"},
        {"resizeAllowedTip",                "Determines if the components are resizable"},
        {"moveAllowed",                     "Component moving allowed"},
        {"moveAllowedTip",                  "Determines if the components can be moved aroung inside <br>the E-Slate desktop"},
        {"ScrollBarAsNeeded",               "AS NEEDED"},
        {"ScrollBarNever",                  "NEVER"},
        {"ScrollBarAlways",                 "ALWAYS"},

    };
}